
JWT_SECRET=$(openssl rand -hex 32)
JWT_TOKEN=$(python jwt-gentoken.py)
INFLUXDB_PASS="Pass123"
oc create secret generic influxdb-token \
  --from-literal INFLUXDB_HTTP_SHARED_SECRET="$JWT_SECRET" \
  --from-literal INFLUXDB_TOKEN="${JWT_TOKEN}" \
  --from-literal INFLUXDB_ADMIN_USER=influxdb \
  --from-literal INFLUXDB_ADMIN_PASSWORD="${INFLUXDB_PASS}" \
  --from-literal INFLUXDB_DB=openshift \
  -o yaml --dry-run=client > influxdb-token.yaml
oc apply -f influxdb-token.yaml

oc create secret generic influxdb-token-info \
  --from-literal username=influxdb \
  --from-literal jwt_secret="$JWT_SECRET" \
  -o yaml --dry-run=client > influxdb-token-info-secret.yaml
oc apply -f influxdb-token-info-secret.yaml

curl  -XPOST -H "Authorization: Bearer ${JWT_TOKEN}" \
  https://influxdb.apps.sno.openshift.training/query \
  --data-urlencode "q=show databases" -sSL | jq .

oc rollout restart deployment influxdb

oc get quota -A -o json \
 jq -c '.items[]|{name: .metadata.namespace, cpu_limits: .status.hard["limits.cpu"], memory_limits: .status.hard["limits.memory"], cpu_used: .status.used["limits.cpu"], memory_used: .status.used["limits.cpu"]}'


apitoken=$(cat /run/secrets/kubernetes.io/serviceaccount/token)

curl -sSL -H "Authorization: Bearer ${apitoken}" "https://api.sno.openshift.training:6443/api/v1/nodes/sno.openshift.training/proxy/stats/summary"

[
  "node",
  "pods"
]

node:
[
  "cpu",
  "fs",
  "memory",
  "network",
  "nodeName",
  "rlimit",
  "runtime",
  "startTime",
  "swap",
  "systemContainers"
          [
            "cpu",
            "memory",
            "name",
            "startTime",
            "swap"
          ]
]

pods: 
[
  "containers",
  "cpu",
  "ephemeral-storage",
  "memory",
  "network",
  "podRef",
  "process_stats",
  "startTime",
  "swap",
  "volume"
]



### Create admin user with API
query="CREATE USER influxdb WITH PASSWORD 'Pass123' WITH ALL PRIVILEGES"
influx_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImluZmx1eGRiIiwiZXhwIjoxNzY5NDcwNzYzLjU1NzI4Mn0.qU9vt_gQB4SMn1ywDYv-fPR58I53afq3kZwi27aA9hI
curl  -XPOST -H "Authorization: Bearer ${influx_token}" \
  https://influxdb.apps.sno.openshift.training/query \
  --data-urlencode "q=${query}" -sSL 
